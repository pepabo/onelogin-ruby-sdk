=begin
#OneLogin API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 3.0.0-alpha.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OneLogin::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = OneLogin::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(OneLogin::DefaultApi)
    end
  end

  # unit tests for activate_factor
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param activate_factor_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'activate_factor test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_access_token_claim
  # @param authorization 
  # @param id 
  # @param add_access_token_claim_request 
  # @param [Hash] opts the optional parameters
  # @return [Id]
  describe 'add_access_token_claim test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_client_app
  # @param authorization 
  # @param id 
  # @param add_client_app_request 
  # @param [Hash] opts the optional parameters
  # @return [ClientApp]
  describe 'add_client_app test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_role_admins
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param request_body 
  # @param [Hash] opts the optional parameters
  # @return [Array<AddRoleUsers200ResponseInner>]
  describe 'add_role_admins test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_role_users
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param request_body 
  # @param [Hash] opts the optional parameters
  # @return [Array<AddRoleUsers200ResponseInner>]
  describe 'add_role_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_scope
  # @param authorization 
  # @param id 
  # @param add_scope_request 
  # @param [Hash] opts the optional parameters
  # @return [Id]
  describe 'add_scope test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bulk_mapping_sort
  # @param authorization 
  # @param request_body The request body must contain an array of User Mapping IDs in the desired order.
  # @param [Hash] opts the optional parameters
  # @return [Array<Integer>]
  describe 'bulk_mapping_sort test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bulk_sort
  # @param authorization 
  # @param app_id 
  # @param request_body The request body must contain an array of App Rule IDs in the desired order.
  # @param [Hash] opts the optional parameters
  # @return [Array<Integer>]
  describe 'bulk_sort test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_app
  # @param authorization 
  # @param schema 
  # @param [Hash] opts the optional parameters
  # @return [Schema]
  describe 'create_app test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_authorization_server
  # @param authorization 
  # @param create_authorization_server_request 
  # @param [Hash] opts the optional parameters
  # @return [Id]
  describe 'create_authorization_server test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_environment_variable
  # @param authorization 
  # @param create_environment_variable_request 
  # @param [Hash] opts the optional parameters
  # @return [Envvar]
  describe 'create_environment_variable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_hook
  # @param authorization 
  # @param hook 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_hook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_mapping
  # @param authorization 
  # @param mapping 
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'create_mapping test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_risk_rule
  # @param authorization 
  # @param risk_rule 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_risk_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_roles
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @return [Array<CreateRoles201ResponseInner>]
  describe 'create_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_rule
  # @param authorization 
  # @param app_id 
  # @param rule 
  # @param [Hash] opts the optional parameters
  # @return [RuleId]
  describe 'create_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_user
  # @param authorization 
  # @param user 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :mappings Controls how mappings will be applied to the user on creation. Defaults to async.
  # @option opts [Boolean] :validate_policy Will passwords validate against the User Policy? Defaults to true.
  # @return [User]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_access_token_claim
  # @param authorization 
  # @param id 
  # @param claim_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_access_token_claim test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_app
  # @param authorization 
  # @param app_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_app test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_app_parameter
  # @param authorization 
  # @param app_id 
  # @param parameter_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_app_parameter test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_authorization_server
  # @param authorization 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_authorization_server test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_environment_variable
  # @param authorization 
  # @param envvar_id Set to the id of the Hook Environment Variable that you want to fetch.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_environment_variable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_factor
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param device_id Set to the device_id of the MFA device.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_factor test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_hook
  # @param authorization 
  # @param hook_id Set to the id of the Hook that you want to return.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_hook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_mapping
  # @param authorization 
  # @param mapping_id The id of the user mapping to locate.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_mapping test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_risk_rule
  # @param authorization 
  # @param risk_rule_id 
  # @param [Hash] opts the optional parameters
  # @return [RiskRule]
  describe 'delete_risk_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_role
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_rule
  # @param authorization 
  # @param app_id 
  # @param rule_id The id of the app rule to locate.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_scope
  # @param authorization 
  # @param id 
  # @param scope_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_scope test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_user
  # @param authorization 
  # @param user_id Set to the id of the user that you want to return.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dry_run_mapping
  # @param authorization 
  # @param mapping_id The id of the user mapping to locate.
  # @param request_body Request body is a list of user IDs tested against the mapping conditions to verify that the mapping would be applied
  # @param [Hash] opts the optional parameters
  # @return [Array<Object>]
  describe 'dry_run_mapping test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enroll_factor
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param enroll_factor_request 
  # @param [Hash] opts the optional parameters
  # @return [Array<Array>]
  describe 'enroll_factor test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_mfa_token
  # @param authorization 
  # @param generate_mfa_token_request 
  # @param [Hash] opts the optional parameters
  # @return [GenerateMfaToken200Response]
  describe 'generate_mfa_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_saml_assertion
  # @param authorization 
  # @param generate_saml_assertion_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'generate_saml_assertion test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_token
  # @param authorization 
  # @param generate_token_request 
  # @param [Hash] opts the optional parameters
  # @return [GenerateToken200Response]
  describe 'generate_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_app
  # @param authorization 
  # @param app_id 
  # @param [Hash] opts the optional parameters
  # @return [Schema]
  describe 'get_app test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_authorization_server
  # @param authorization 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [GetAuthorizationServer200Response]
  describe 'get_authorization_server test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_factors
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param [Hash] opts the optional parameters
  # @return [Array<GetAvailableFactors200ResponseInner>]
  describe 'get_available_factors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_client_apps
  # @param authorization 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Array<GetClientApps200ResponseInner>]
  describe 'get_client_apps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_enrolled_factors
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param [Hash] opts the optional parameters
  # @return [Array<Device>]
  describe 'get_enrolled_factors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_environment_variable
  # @param authorization 
  # @param envvar_id Set to the id of the Hook Environment Variable that you want to fetch.
  # @param [Hash] opts the optional parameters
  # @return [Envvar]
  describe 'get_environment_variable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_hook
  # @param authorization 
  # @param hook_id Set to the id of the Hook that you want to return.
  # @param [Hash] opts the optional parameters
  # @return [Hook]
  describe 'get_hook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_logs
  # @param authorization 
  # @param hook_id Set to the id of the Hook that you want to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @option opts [String] :request_id Returns logs that contain this request_id.
  # @option opts [String] :correlation_id Returns logs that contain this correlation_id.
  # @return [Array<Log>]
  describe 'get_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_mapping
  # @param authorization 
  # @param mapping_id The id of the user mapping to locate.
  # @param [Hash] opts the optional parameters
  # @return [Mapping]
  describe 'get_mapping test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_rate_limit
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @return [GetRateLimit200Response]
  describe 'get_rate_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_risk_rule
  # @param authorization 
  # @param risk_rule_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_risk_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_risk_score
  # @param authorization 
  # @param get_risk_score_request 
  # @param [Hash] opts the optional parameters
  # @return [GetRiskScore200Response]
  describe 'get_risk_score test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_role
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param [Hash] opts the optional parameters
  # @return [Role]
  describe 'get_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_role_admins
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @option opts [String] :name Allows you to filter on first name, last name, username, and email address.
  # @option opts [Boolean] :include_unassigned Optional. Defaults to false. Include users that aren’t assigned to the role.
  # @return [Array<Schema1>]
  describe 'get_role_admins test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_role_apps
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @option opts [Boolean] :assigned Optional. Defaults to true. Returns all apps not yet assigned to the role.
  # @return [Array<Schema>]
  describe 'get_role_apps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_role_users
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @option opts [String] :name Allows you to filter on first name, last name, username, and email address.
  # @option opts [Boolean] :include_unassigned Optional. Defaults to false. Include users that aren’t assigned to the role.
  # @return [Array<Schema1>]
  describe 'get_role_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_rule
  # @param authorization 
  # @param app_id 
  # @param rule_id The id of the app rule to locate.
  # @param [Hash] opts the optional parameters
  # @return [Rule]
  describe 'get_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_score_insights
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :before Optional ISO8601 formatted date string. Defaults to current date. Maximum date is 90 days ago.
  # @option opts [String] :after Optional ISO8601 formatted date string. Defaults to 30 days ago. Maximum date is 90 days ago.
  # @return [GetScoreInsights200Response]
  describe 'get_score_insights test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # @param authorization 
  # @param user_id Set to the id of the user that you want to return.
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_apps
  # @param authorization 
  # @param user_id Set to the id of the user that you want to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :ignore_visibility Defaults to &#x60;false&#x60;. When &#x60;true&#x60; will show all apps that are assigned to a user regardless of their portal visibility setting.
  # @return [Array<GetUserApps200ResponseInner>]
  describe 'get_user_apps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_access_token_claims
  # @param authorization 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Array<ListAccessTokenClaims200ResponseInner>]
  describe 'list_access_token_claims test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_action_values
  # @param authorization 
  # @param app_id 
  # @param action_value The value for the selected action.
  # @param [Hash] opts the optional parameters
  # @return [Array<ListConditionValues200ResponseInner>]
  describe 'list_action_values test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_actions
  # @param authorization 
  # @param app_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<ListActions200ResponseInner>]
  describe 'list_actions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_app_users
  # @param authorization 
  # @param app_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @return [Array<ListAppUsers200ResponseInner>]
  describe 'list_app_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_apps
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @option opts [String] :name The name or partial name of the app to search for. When using a partial name you must append a wildcard &#x60;*&#x60;
  # @option opts [Integer] :connector_id Returns all apps based off a specific connector. See List Connectors for a complete list of Connector IDs.
  # @option opts [AuthMethod] :auth_method Returns all apps based of a given type.
  # @return [Array<Schema>]
  describe 'list_apps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_authorization_servers
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @return [Array<ListAuthorizationServers200ResponseInner>]
  describe 'list_authorization_servers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_condition_operators
  # @param authorization 
  # @param app_id 
  # @param condition_value The value for the selected condition.
  # @param [Hash] opts the optional parameters
  # @return [Array<ListConditionOperators200ResponseInner>]
  describe 'list_condition_operators test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_condition_values
  # @param authorization 
  # @param app_id 
  # @param condition_value The value for the selected condition.
  # @param [Hash] opts the optional parameters
  # @return [Array<ListConditionValues200ResponseInner>]
  describe 'list_condition_values test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_conditions
  # @param authorization 
  # @param app_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<ListConditions200ResponseInner>]
  describe 'list_conditions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_connectors
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @option opts [String] :name The name or partial name of the connector to search for. When using a partial name you must append a wildcard &#x60;*&#x60;
  # @option opts [AuthMethod] :auth_method Returns all connectors of a given type.
  # @return [Array<Connector>]
  describe 'list_connectors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_environment_variables
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @return [Array<Envvar>]
  describe 'list_environment_variables test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_hooks
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @return [Array<Hook>]
  describe 'list_hooks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_mapping_action_values
  # @param authorization 
  # @param action_value The value for the selected action.
  # @param [Hash] opts the optional parameters
  # @return [Array<ListConditionValues200ResponseInner>]
  describe 'list_mapping_action_values test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_mapping_actions
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @return [Array<ListActions200ResponseInner>]
  describe 'list_mapping_actions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_mapping_condition_operators
  # @param authorization 
  # @param condition_value The value for the selected condition.
  # @param [Hash] opts the optional parameters
  # @return [Array<ListMappingConditionOperators200ResponseInner>]
  describe 'list_mapping_condition_operators test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_mapping_condition_values
  # @param authorization 
  # @param condition_value The value for the selected condition.
  # @param [Hash] opts the optional parameters
  # @return [Array<ListConditionValues200ResponseInner>]
  describe 'list_mapping_condition_values test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_mapping_conditions
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @return [Array<ListMappingConditions200ResponseInner>]
  describe 'list_mapping_conditions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_mappings
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :enabled Defaults to true. When set to &#x60;false&#x60; will return all disabled mappings.
  # @option opts [String] :has_condition Filters Mappings based on their Conditions.
  # @option opts [String] :has_condition_type Filters Mappings based on their condition types.
  # @option opts [String] :has_action Filters Mappings based on their Actions.
  # @option opts [String] :has_action_type Filters Mappings based on their action types.
  # @return [Array<Mapping>]
  describe 'list_mappings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_risk_rules
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'list_risk_rules test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_roles
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @option opts [String] :name Optional. Filters by role name.
  # @option opts [String] :app_id Optional. Returns roles that contain this app name.
  # @option opts [String] :fields Optional. Comma delimited list of fields to return.
  # @return [Array<Role>]
  describe 'list_roles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_rules
  # @param authorization 
  # @param app_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :enabled Defaults to true. When set to &#x60;false&#x60; will return all disabled rules.
  # @option opts [String] :has_condition Filters Rules based on their Conditions.
  # @option opts [String] :has_condition_type Filters Rules based on their condition types.
  # @option opts [String] :has_action Filters Rules based on their Actions.
  # @option opts [String] :has_action_type Filters Rules based on their action types.
  # @return [Array<Rule>]
  describe 'list_rules test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_scopes
  # @param authorization 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Array<ListScopes200ResponseInner>]
  describe 'list_scopes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_users
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The total number of items returned per page. The maximum limit varies between endpoints, see the relevant endpoint documentation for the specific limit.
  # @option opts [Integer] :page The page number of results to return.
  # @option opts [String] :cursor Set to the value extracted from Before-Cursor or After-Cursor headers to return the previous or next page.
  # @option opts [String] :created_since An ISO8601 timestamp value that returns all users created after a given date &amp; time.
  # @option opts [String] :created_until An ISO8601 timestamp value that returns all users created before a given date &amp; time.
  # @option opts [String] :updated_since An ISO8601 timestamp value that returns all users updated after a given date &amp; time.
  # @option opts [String] :updated_until An ISO8601 timestamp value that returns all users updated before a given date &amp; time.
  # @option opts [String] :last_login_since An ISO8601 timestamp value that returns all users that logged in after a given date &amp; time.
  # @option opts [String] :last_login_until 
  # @option opts [String] :firstname The first name of the user
  # @option opts [String] :lastname The last name of the user
  # @option opts [String] :email The email address of the user
  # @option opts [String] :username The username for the user
  # @option opts [String] :samaccountname The AD login name for the user
  # @option opts [String] :directory_id The ID in OneLogin of the Directory that the user belongs to
  # @option opts [String] :external_id An external identifier that has been set on the user
  # @option opts [String] :app_id The ID of a OneLogin Application
  # @option opts [String] :user_ids A comma separated list of OneLogin User IDs
  # @option opts [String] :custom_attributes_attribute_name The short name of a custom attribute. Note that the attribute name is prefixed with custom_attributes.
  # @option opts [String] :fields A comma separated list user attributes to return.
  # @return [Array<User>]
  describe 'list_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_client_app
  # @param authorization 
  # @param id 
  # @param client_app_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_client_app test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_role_admins
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param remove_role_users_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_role_admins test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_role_users
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param remove_role_users_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_role_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for revoke_token
  # @param authorization 
  # @param [Hash] opts the optional parameters
  # @option opts [RevokeTokenRequest] :revoke_token_request 
  # @return [GenerateToken400Response]
  describe 'revoke_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_role_apps
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param request_body 
  # @param [Hash] opts the optional parameters
  # @return [Array<SetRoleApps200ResponseInner>]
  describe 'set_role_apps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track_event
  # @param authorization 
  # @param track_event_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'track_event test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_access_token_claim
  # @param authorization 
  # @param id 
  # @param claim_id 
  # @param add_access_token_claim_request 
  # @param [Hash] opts the optional parameters
  # @return [Id]
  describe 'update_access_token_claim test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_app
  # @param authorization 
  # @param app_id 
  # @param schema 
  # @param [Hash] opts the optional parameters
  # @return [Schema]
  describe 'update_app test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_authorization_server
  # @param authorization 
  # @param id 
  # @param create_authorization_server_request 
  # @param [Hash] opts the optional parameters
  # @return [Id]
  describe 'update_authorization_server test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_client_app
  # @param authorization 
  # @param id 
  # @param client_app_id 
  # @param update_client_app_request 
  # @param [Hash] opts the optional parameters
  # @return [ClientApp]
  describe 'update_client_app test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_environment_variable
  # @param authorization 
  # @param envvar_id Set to the id of the Hook Environment Variable that you want to fetch.
  # @param update_environment_variable_request 
  # @param [Hash] opts the optional parameters
  # @return [Envvar]
  describe 'update_environment_variable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_hook
  # @param authorization 
  # @param hook_id Set to the id of the Hook that you want to return.
  # @param hook 
  # @param [Hash] opts the optional parameters
  # @return [Hook]
  describe 'update_hook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_mapping
  # @param authorization 
  # @param mapping_id The id of the user mapping to locate.
  # @param mapping 
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'update_mapping test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_risk_rule
  # @param authorization 
  # @param risk_rule_id 
  # @param risk_rule 
  # @param [Hash] opts the optional parameters
  # @return [RiskRule]
  describe 'update_risk_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_role
  # @param authorization 
  # @param role_id Set to the id of the role you want to return.
  # @param role 
  # @param [Hash] opts the optional parameters
  # @return [UpdateRole200Response]
  describe 'update_role test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_rule
  # @param authorization 
  # @param app_id 
  # @param rule_id The id of the app rule to locate.
  # @param rule 
  # @param [Hash] opts the optional parameters
  # @return [RuleId]
  describe 'update_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_scope
  # @param authorization 
  # @param id 
  # @param scope_id 
  # @param add_scope_request 
  # @param [Hash] opts the optional parameters
  # @return [Id]
  describe 'update_scope test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # @param authorization 
  # @param user_id Set to the id of the user that you want to return.
  # @param user 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :mappings Controls how mappings will be applied to the user on creation. Defaults to async.
  # @option opts [Boolean] :validate_policy Will passwords validate against the User Policy? Defaults to true.
  # @return [User]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_enrollment
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param registration_id Set to the uuid of the registration. This was included in the response as part of the initial request in Enroll Factor.
  # @param verify_enrollment_request 
  # @param [Hash] opts the optional parameters
  # @return [Array<Registration>]
  describe 'verify_enrollment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_enrollment_voice_protect
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param registration_id Set to the uuid of the registration. This was included in the response as part of the initial request in Enroll Factor.
  # @param [Hash] opts the optional parameters
  # @return [Array<Registration>]
  describe 'verify_enrollment_voice_protect test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_factor
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param verification_id The verification_id is returned on activation of the factor or you can get the device_id using the Activate Factor API call.
  # @param verify_factor_request 
  # @param [Hash] opts the optional parameters
  # @return [Status2]
  describe 'verify_factor test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_factor_saml
  # @param authorization 
  # @param verify_factor_saml_request 
  # @param [Hash] opts the optional parameters
  # @return [VerifyFactorSaml200Response]
  describe 'verify_factor_saml test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_factor_voice
  # @param authorization 
  # @param user_id Set to the id of the user.
  # @param verification_id The verification_id is returned on activation of the factor or you can get the device_id using the Activate Factor API call.
  # @param [Hash] opts the optional parameters
  # @return [Array<VerifyFactorVoice200ResponseInner>]
  describe 'verify_factor_voice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
